[{"C:\\Users\\khale\\reactapp\\bug-tracker\\src\\index.js":"1","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\App.js":"2","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\Bug.js":"4","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\FilterButton.js":"5","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\BugForm.js":"6"},{"size":751,"mtime":1611478388596,"results":"7","hashOfConfig":"8"},{"size":2301,"mtime":1611609232360,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2759,"mtime":1611585212818,"results":"11","hashOfConfig":"8"},{"size":668,"mtime":1611608679770,"results":"12","hashOfConfig":"8"},{"size":957,"mtime":1611509716352,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vga0lr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\khale\\reactapp\\bug-tracker\\src\\index.js",[],["29","30"],"C:\\Users\\khale\\reactapp\\bug-tracker\\src\\App.js",["31","32","33"],"C:\\Users\\khale\\reactapp\\bug-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\Bug.js",["34","35"],"import React, { useState } from 'react';\r\nimport { Card, Form, ButtonGroup, Button, Badge, ListGroup } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nconst Bug = (props) => {\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.editBugs(props.id, newName);\r\n        setNewName('');\r\n        setEditing(false);\r\n    }\r\n\r\n    const editingTemplate = (\r\n        <Form className=\"form\" onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <label htmlFor={props.id}>\r\n                    New name for {props.name}\r\n                </label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Edith bug\"\r\n                    name=\"text\"\r\n                    autoComplete=\"off\"\r\n                    id={props.id}\r\n                    value={newName}\r\n                    onChange={handleChange}\r\n                />\r\n                <ButtonGroup>\r\n                    <Button variant=\"outline-danger\" className=\"shadow\" onClick={() => setEditing(false)}>\r\n                        Cancel\r\n              <span> renaming {props.name}</span>\r\n                    </Button>\r\n                    <Button variant=\"outline-primary\" className=\"shadow\">\r\n                        Save\r\n              <span> new name for {props.name}</span>\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n\r\n    const viewTemplate = (\r\n        <div className=\"container\">\r\n            <input\r\n                id={props.id}\r\n                type=\"checkbox\"\r\n                defaultChecked={props.resolved}\r\n                onChange={() => props.resolved(props.id)}\r\n            />\r\n            <label htmlFor={props.id}>\r\n                {props.name}\r\n            </label>\r\n\r\n            <ButtonGroup>\r\n                <Button\r\n                    variant=\"outline-primary\" className=\"shadow\"\r\n                    onClick={() => setEditing(true)}>\r\n                    Edit <span>{props.name}</span>\r\n                </Button>\r\n                <Button\r\n                    variant=\"outline-danger\" className=\"shadow\"\r\n                    onClick={() => props.deleteBug(props.id)}\r\n                >\r\n                    Delete <span>{props.name}</span>\r\n                </Button>\r\n            </ButtonGroup>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <ListGroup>\r\n                <ListGroup.Item>{isEditing ? editingTemplate : viewTemplate}</ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Bug;","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\FilterButton.js",["36","37","38","39"],"import React from 'react';\r\nimport { Card, Form, ButtonGroup, Button, Badge, ListGroup } from 'react-bootstrap';\r\n\r\nconst FilterButton = (props) => {\r\n    return (\r\n        <>\r\n        <ButtonGroup aria-label=\"filter\">\r\n            <Button\r\n                variant=\"outline-primary\"\r\n                className=\"btn shadow\"\r\n                aria-pressed={props.isPressed}\r\n                onClick={() => props.setFilter(props.name)}\r\n            >\r\n                <span>Show </span>\r\n                <span>{props.name}</span>\r\n                <span> bugs</span>\r\n            </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","C:\\Users\\khale\\reactapp\\bug-tracker\\src\\components\\BugForm.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":16,"nodeType":"46","messageId":"47","endLine":3,"endColumn":27},{"ruleId":"44","severity":1,"message":"48","line":3,"column":29,"nodeType":"46","messageId":"47","endLine":3,"endColumn":35},{"ruleId":"44","severity":1,"message":"49","line":3,"column":44,"nodeType":"46","messageId":"47","endLine":3,"endColumn":53},{"ruleId":"44","severity":1,"message":"50","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"51","line":2,"column":43,"nodeType":"46","messageId":"47","endLine":2,"endColumn":48},{"ruleId":"44","severity":1,"message":"50","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"52","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":20},{"ruleId":"44","severity":1,"message":"51","line":2,"column":43,"nodeType":"46","messageId":"47","endLine":2,"endColumn":48},{"ruleId":"44","severity":1,"message":"49","line":2,"column":50,"nodeType":"46","messageId":"47","endLine":2,"endColumn":59},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Badge' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]